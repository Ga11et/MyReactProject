{"version":3,"sources":["things/findpeople/findpeople.module.css","things/findpeople/person/person.module.css","things/findpeople/formiksearchform/formikSearchForm.module.css","things/findpeople/person/person.tsx","redux/img/user.jpg","things/findpeople/formiksearchform/formikSearchForm.tsx","things/findpeople/findpeople.tsx"],"names":["module","exports","Person","props","dispatch","useDispatch","className","css","body","avatar","to","userId","src","alt","followed","disabled","isButtonLoading","some","el","onClick","FindPeopleRedThunks","unFollowPerson","followPerson","main","name","status","location","country","city","FoemikSearchForm","searchForm","useSelector","state","findpeople","activePage","active","history","useHistory","useMemo","data","parse","search","dataForDispatch","term","friend","FindPeopleRedActions","putSearchForm","useEffect","page","String","push","pathname","stringify","enableReinitialize","initialValues","onSubmit","values","setSubmitting","isSubmitting","type","component","id","value","FindPeoplePage","people","arrayButtonsLoading","countPeople","countPeopleOnPage","isLoading","showPeople","changeActivePage","onNumberPageClick","number","persons","map","photos","small","userImg","showSizeChanger","current","showQuickJumper","total","onChange","style","marginTop","loadingIconfrom"],"mappings":"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","file":"static/js/7.58590bd0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"findpeople_main__2Jbl9\",\"numberPage\":\"findpeople_numberPage__twJxv\",\"active\":\"findpeople_active__1Y-oj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"person_body__3z4Yw\",\"avatar\":\"person_avatar__Vkr3W\",\"main\":\"person_main__DFUO8\",\"name\":\"person_name__2dDG5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"formikSearchForm_main__3T0Zy\"};","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { FindPeopleRedThunks } from '../../../redux/findPeopleReducer'\r\nimport css from './person.module.css'\r\n\r\ntype propsType = {\r\n    userId: number\r\n    avatar: string\r\n    followed: boolean\r\n    isButtonLoading: Array<number>\r\n    name: string\r\n    status: string\r\n    country: string\r\n    city: string\r\n}\r\n\r\nconst Person: React.FC<propsType> = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const follow = (userId: number) => {\r\n        dispatch(FindPeopleRedThunks.followPerson(userId))\r\n    }\r\n    const unFollow = (userId: number) => {\r\n        dispatch(FindPeopleRedThunks.unFollowPerson(userId))\r\n    }\r\n\r\n    return (\r\n        <section className={css.body}>\r\n            <div className={css.avatar}>\r\n                <NavLink to={`/profile/${props.userId}`} >\r\n                    <img src={props.avatar} alt=\"avatar\" />\r\n                </NavLink>\r\n                {(props.followed)\r\n                    ? <button disabled={props.isButtonLoading.some( el => el === props.userId)} \r\n                            onClick={() => unFollow(props.userId)}>Unfollow</button>\r\n                    : <button disabled={props.isButtonLoading.some( el => el === props.userId)} \r\n                            onClick={() => follow(props.userId)}>Follow</button>}\r\n            </div>\r\n            <div className={css.main}>\r\n                <div className={css.name}>\r\n                    <NavLink to={`/profile/${props.userId}`} >\r\n                        <p>{props.name}</p>\r\n                    </NavLink>\r\n                    <p>{props.status}</p>\r\n                </div>\r\n                <div className={css.location}>\r\n                    <p>{props.country}</p>\r\n                    <p>{props.city}</p>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Person","export default __webpack_public_path__ + \"static/media/user.5edf0c2b.jpg\";","import { Field, Form, Formik } from \"formik\";\r\nimport { parse, stringify } from \"query-string\";\r\nimport React, { FC, useEffect, useMemo } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { FindPeopleRedActions } from \"../../../redux/findPeopleReducer\";\r\nimport { AppStateType } from \"../../../redux/redux-state\";\r\nimport { searchFormType } from \"../../../types/types\";\r\nimport css from './formikSearchForm.module.css'\r\n\r\ntype urlDataType = {\r\n    term?: string\r\n    friend?: string\r\n    page?: string\r\n}\r\n\r\n\r\nexport const FoemikSearchForm: FC<{}> = (props) => {\r\n\r\n\r\n    const searchForm = useSelector((state: AppStateType) => state.findpeople.searchForm)\r\n    const activePage = useSelector((state: AppStateType) => state.findpeople.active)\r\n\r\n    const history = useHistory()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useMemo(() => {\r\n        const data: urlDataType = parse(history.location.search)\r\n        const dataForDispatch: searchFormType = {}\r\n        if (!!data.term) {dataForDispatch.term = data.term} else {dataForDispatch.term = ''}\r\n        if (!!data.friend) {dataForDispatch.friend = data.friend} else {dataForDispatch.friend = ''}\r\n        dispatch(FindPeopleRedActions.putSearchForm(dataForDispatch))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const data: urlDataType = {}\r\n        if (!!searchForm.term) {data.term = searchForm.term}\r\n        if (!!searchForm.friend) {data.friend = searchForm.friend}\r\n        if (activePage > 1) {data.page = String(activePage)}\r\n        history.push({\r\n            pathname: '/find',\r\n            search: stringify(data)\r\n        })\r\n    }, [searchForm, activePage])\r\n\r\n    return <>\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={searchForm}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                dispatch(FindPeopleRedActions.putSearchForm(values))\r\n                setSubmitting(false);\r\n            }} >\r\n            {({ isSubmitting }) => (\r\n                <Form className={css.main}>\r\n                    <Field type=\"text\" name=\"term\" />\r\n                    <Field component=\"select\" id=\"friend\" name=\"friend\" >\r\n                        <option value=\"\">All</option>\r\n                        <option value='true'>Only followed</option>\r\n                        <option value='false'>Only not followed</option>\r\n                    </Field>\r\n\r\n                    <button type=\"submit\" disabled={isSubmitting}>\r\n                        Search\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    </>\r\n}","import css from './findpeople.module.css'\r\nimport Person from './person/person'\r\nimport userImg from '../../redux/img/user.jpg'\r\nimport React, { useEffect } from 'react'\r\nimport loadingIconfrom from '../../assets/loading.svg'\r\nimport { PaginatorScript } from '../component/paginator/paginator'\r\nimport { FoemikSearchForm } from './formiksearchform/formikSearchForm'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AppStateType } from '../../redux/redux-state'\r\nimport { FindPeopleRedActions, FindPeopleRedThunks } from '../../redux/findPeopleReducer'\r\nimport { Pagination } from 'antd'\r\n\r\n\r\n\r\nconst FindPeoplePage: React.FC<{}> = (props) => {\r\n\r\n    const people = useSelector((state: AppStateType) => state.findpeople.people)\r\n    const arrayButtonsLoading = useSelector((state: AppStateType) => state.findpeople.arrayButtonsLoading)\r\n    const countPeople = useSelector((state: AppStateType) => state.findpeople.countPeople)\r\n    const countPeopleOnPage = useSelector((state: AppStateType) => state.findpeople.countPeopleOnPage)\r\n    const activePage = useSelector((state: AppStateType) => state.findpeople.active)\r\n    const isLoading = useSelector((state: AppStateType) => state.findpeople.isLoading)\r\n    const searchForm = useSelector((state: AppStateType) => state.findpeople.searchForm)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(FindPeopleRedThunks.showPeople(activePage, countPeopleOnPage, searchForm))\r\n    }, [activePage])\r\n\r\n    useEffect(() => {\r\n        dispatch(FindPeopleRedActions.changeActivePage(1))\r\n        if (activePage === 1) dispatch(FindPeopleRedThunks.showPeople(1, countPeopleOnPage, searchForm))\r\n    }, [searchForm])\r\n\r\n    const onNumberPageClick = (number: number) => {\r\n        dispatch(FindPeopleRedActions.changeActivePage(number))\r\n    }\r\n\r\n    const persons = people.map((el) => {\r\n        return (\r\n            <Person userId={el.id}\r\n                avatar={el.photos.small != null ? el.photos.small : userImg}\r\n                followed={el.followed}\r\n                name={el.name}\r\n                status={el.status}\r\n                country={\"some country\"}\r\n                city={\"some city\"}\r\n                isButtonLoading={arrayButtonsLoading}\r\n                key={el.id} />\r\n        )\r\n    })\r\n    return (\r\n        <div className={css.main}>\r\n            <FoemikSearchForm />\r\n            <Pagination showSizeChanger={false}\r\n                current={activePage}\r\n                showQuickJumper\r\n                total={countPeople}\r\n                onChange={onNumberPageClick}\r\n                style={{ marginTop: '30px' }} />\r\n            {isLoading ? <img src={loadingIconfrom} alt='loadingIcon' /> : null}\r\n            {persons}\r\n            <Pagination showSizeChanger={false}\r\n                showQuickJumper\r\n                current={activePage}\r\n                total={countPeople}\r\n                onChange={onNumberPageClick}\r\n                style={{ marginTop: '30px' }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FindPeoplePage"],"sourceRoot":""}