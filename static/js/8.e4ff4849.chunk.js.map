{"version":3,"sources":["things/login/login.module.css","things/login/login.tsx"],"names":["module","exports","LoginForm","props","captchaUrl","useSelector","state","auth","captcha","dispatch","useDispatch","initialValues","email","password","rememberMe","onSubmit","values","setSubmitting","AuthRedThunks","postLoginData","isSubmitting","component","type","name","src","alt","htmlType","disabled","LoginPage","isAuth","to","className","css","main","loginBlock"],"mappings":"uFACAA,EAAOC,QAAU,CAAC,KAAO,oBAAoB,WAAa,4B,iCCD1D,mFAwBMC,EAAgB,SAACC,GAEnB,IAAMC,EAAaC,aAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKC,WAC7DC,EAAWC,cAEjB,OAAO,cAAC,IAAD,CACPC,cAAe,CAAEH,QAAS,GAAII,MAAO,GAAIC,SAAU,GAAIC,YAAY,GACnEC,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACjBR,EAASS,IAAcC,cAAcH,IACrCC,GAAc,IAJX,SAMN,gBAAGG,EAAH,EAAGA,aAAH,OACG,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,UAAU,QAAQC,KAAK,QAAQC,KAAK,UAC3C,cAAC,IAAD,CAAOF,UAAU,QAAQC,KAAK,WAAWC,KAAK,aAC9C,kCACI,cAAC,IAAD,CAAOF,UAAU,QAAQC,KAAK,WAAWC,KAAK,eADlD,cAICnB,GAAc,qCACX,qBAAKoB,IAAKpB,EAAYqB,IAAI,YAC1B,cAAC,IAAD,CAAOJ,UAAU,QAAQE,KAAK,eAElC,cAAC,IAAD,CAAQD,KAAK,UAAUI,SAAS,SAASC,SAAUP,EAAnD,0BAQGQ,UA7CO,SAACzB,GAInB,OAFeE,aAAY,SAACC,GAAD,OAAyBA,EAAMC,KAAKsB,UAE5C,cAAC,IAAD,CAAUC,GAAG,aAEzB,qBAAKC,UAAWC,IAAIC,KAApB,SACH,sBAAKF,UAAWC,IAAIE,WAApB,UACI,uCACA,cAAChC,EAAD","file":"static/js/8.e4ff4849.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"login_main__rc_DH\",\"loginBlock\":\"login_loginBlock__1wIJ5\"};","import React, { FC } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { AuthRedThunks } from '../../redux/authReducer'\r\nimport css from './login.module.css'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { AppStateType } from '../../redux/redux-state'\r\nimport { Field, Form, Formik } from 'formik'\r\nimport { Button } from 'antd'\r\n\r\n\r\nconst LoginPage: FC = (props) => {\r\n\r\n    const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\r\n\r\n    if (isAuth) return <Redirect to=\"/profile\" />\r\n\r\n    return <div className={css.main}>\r\n        <div className={css.loginBlock}>\r\n            <h3>Login</h3>\r\n            <LoginForm />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst LoginForm: FC = (props) => {\r\n\r\n    const captchaUrl = useSelector((state: AppStateType) => state.auth.captcha)\r\n    const dispatch = useDispatch()\r\n\r\n    return <Formik\r\n    initialValues={{ captcha: '', email: '', password: '', rememberMe: false }}\r\n    onSubmit={(values, { setSubmitting }) => {\r\n        dispatch(AuthRedThunks.postLoginData(values))\r\n        setSubmitting(false);\r\n    }} >\r\n    {({ isSubmitting }) => (\r\n        <Form>\r\n            <Field component='input' type='email' name='email' />\r\n            <Field component='input' type='password' name='password' />\r\n            <label>\r\n                <Field component='Input' type='checkbox' name='rememberMe' />\r\n                Remember\r\n            </label>\r\n            {captchaUrl && <>\r\n                <img src={captchaUrl} alt=\"captcha\" />\r\n                <Field component='input' name=\"captcha\" />\r\n            </>}\r\n            <Button type=\"default\" htmlType='submit' disabled={isSubmitting}>\r\n                Login\r\n            </Button>\r\n        </Form>\r\n    )}\r\n</Formik>\r\n}\r\n\r\nexport default LoginPage\r\n"],"sourceRoot":""}