{"version":3,"sources":["things/component/error/error.tsx","things/component/error/error.module.css","things/component/validatior/valodator.ts","things/component/fieldsTypes/input/Input.tsx","things/component/fieldsTypes/input/Input.module.css","../node_modules/classnames/index.js","things/login/login.module.css","things/login/loginForm/loginForm.tsx","things/login/login.tsx"],"names":["ErrorSpan","props","className","css","item","content","module","exports","required","value","undefined","maxLengthCreator","maxValue","length","Input","input","meta","haveError","touched","error","main","cn","hasOwn","hasOwnProperty","classNames","classes","i","arguments","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","default","LoginForm","handleSubmit","url","onSubmit","Field","component","name","validate","type","src","alt","ReduxLoginForm","reduxForm","form","mapDespatchToProps","postLoginData","AuthRedThunks","connect","state","captchaUrl","auth","captcha","isAuth","to","loginBlock","data"],"mappings":";iLAOaA,EAAiC,SAACC,GAC3C,OAAO,8CAAMC,UAAWC,IAAIC,MAAUH,GAA/B,aAAuCA,EAAMI,a,oBCPxDC,EAAOC,QAAU,CAAC,KAAO,sB,iCCCzB,oEAAO,IAAMC,EAAW,SAACC,GACrB,QAAcC,IAAVD,EAAqB,MAAO,kBAIvBE,EAAmB,SAACC,GAAD,OAA8D,SAACH,GAC3F,GAAIA,GAASA,EAAMI,OAASD,EAAU,MAAM,YAAN,OAAmBA,EAAnB,e,0ICc3BE,IARoB,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAASf,EAAY,iBACxDgB,EAAYD,EAAKE,SAAWF,EAAKG,MACvC,OAAO,sBAAKjB,UAAWC,IAAIiB,KAApB,UACH,6DAAWL,GAAWd,GAAtB,IAA6BC,UAAYmB,IAAG,eAAGlB,IAAIgB,MAAQF,OAC1DA,EAAY,cAAC,IAAD,CAAWZ,QAASW,EAAKG,QAAY,U,oBCjB1Db,EAAOC,QAAU,CAAC,KAAO,oBAAoB,MAAQ,uB,oBCDrD,OAOC,WACA,aAEA,IAAIe,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUd,OAAQa,IAAK,CAC1C,IAAIE,EAAMD,UAAUD,GACpB,GAAKE,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BJ,EAAQK,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IACxB,GAAIA,EAAIf,OAAQ,CACf,IAAIoB,EAAQT,EAAWU,MAAM,KAAMN,GAC/BK,GACHR,EAAQK,KAAKG,SAGT,GAAgB,WAAZJ,EACV,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,SACrC,IAAK,IAAIG,KAAOV,EACXN,EAAOiB,KAAKX,EAAKU,IAAQV,EAAIU,IAChCb,EAAQK,KAAKQ,QAIfb,EAAQK,KAAKF,EAAIO,aAKpB,OAAOV,EAAQe,KAAK,KAGgBlC,EAAOC,SAC3CiB,EAAWiB,QAAUjB,EACrBlB,EAAOC,QAAUiB,QAGX,kBACL,OAAOA,GADF,QAAe,OAAf,aA5CP,I,oBCNDlB,EAAOC,QAAU,CAAC,KAAO,oBAAoB,WAAa,4B,qHC4B3CmC,EAjBmF,SAAC,GAAgC,IAA/BvB,EAA8B,EAA9BA,MAAOwB,EAAuB,EAAvBA,aAAcC,EAAS,EAATA,IACrH,OAAO,uBAAMC,SAAUF,EAAhB,UACH,cAACG,EAAA,EAAD,CAAOC,UAAWjC,IAAOkC,KAAM,QAASC,SAAU,CAACzC,OACnD,cAACsC,EAAA,EAAD,CAAOC,UAAWjC,IAAOoC,KAAM,WAAYF,KAAM,WAAYC,SAAU,CAACzC,OACxE,kCACI,cAACsC,EAAA,EAAD,CAAOC,UAAW,QAASG,KAAM,WAAYF,KAAM,eADvD,cAIEJ,GAAO,qCACL,qBAAKO,IAAKP,EAAKQ,IAAI,YACnB,cAACN,EAAA,EAAD,CAAOC,UAAWjC,IAAOkC,KAAM,UAAWC,SAAU,CAACzC,UAEzD,2CACEW,GAAS,cAAC,IAAD,CAAWd,QAASc,Q,yBChBjCkC,EAAiBC,YAA2C,CAC9DC,KAAM,SADaD,CAEpBZ,GA6BGc,EAAqB,CACvBC,cAAeC,IAAcD,eAGlBE,uBARO,SAACC,GAAD,MAA0B,CAC5CC,WAAYD,EAAME,KAAKC,QACvBC,OAAQJ,EAAME,KAAKE,UAMiBR,EAAzBG,EAxBoB,SAAC,GAA2C,IAAzCF,EAAwC,EAAxCA,cAAeI,EAAyB,EAAzBA,WAMjD,OAN0E,EAAbG,OAM1C,cAAC,IAAD,CAAUC,GAAG,aAEzB,qBAAK/D,UAAWC,IAAIiB,KAApB,SACH,sBAAKlB,UAAWC,IAAI+D,WAApB,UACI,uCACA,cAACb,EAAD,CAAgBR,SATT,SAACsB,GACZV,EAAcU,IAQwBvB,IAAKiB","file":"static/js/8.7a830729.chunk.js","sourcesContent":["import React from 'react'\r\nimport css from './error.module.css'\r\n\r\ntype propsType = {\r\n    content: string\r\n}\r\n\r\nexport const ErrorSpan: React.FC<propsType> = (props) => {\r\n    return <span className={css.item} {...props}>{props.content}</span>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"error_item__2NDaC\"};","\r\n\r\nexport const required = (value: string): string | undefined => {\r\n    if (value === undefined) return \"Required field\"\r\n    return undefined\r\n}\r\n\r\nexport const maxLengthCreator = (maxValue: number): ((value:string) => string | undefined) => (value: string) => {\r\n    if (value && value.length > maxValue) return `Maximum: ${maxValue} simbols`\r\n    return undefined\r\n}\r\n\r\nexport const submitValidator = (values: any) => {\r\n    console.log(values)\r\n}","import { ErrorSpan } from \"../../error/error\"\r\nimport css from './Input.module.css'\r\nimport cn from 'classnames'\r\nimport React from \"react\"\r\n\r\ntype metaType = {\r\n    touched: boolean\r\n    error: string\r\n}\r\ntype propsType = {\r\n    input: number\r\n    meta: metaType\r\n}\r\n\r\nconst Input: React.FC<propsType> = ({ input, meta, ...props }) => {\r\n    const haveError = meta.touched && meta.error\r\n    return <div className={css.main} >\r\n        <input {...input} {...props} className={ cn({ [css.error]: haveError })} />\r\n        {haveError ? <ErrorSpan content={meta.error} /> : null}\r\n    </div>\r\n}\r\n\r\nexport default Input","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Input_main__3cdLk\",\"error\":\"Input_error__2s9Uc\"};","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"login_main__1HPa4\",\"loginBlock\":\"login_loginBlock__1qug9\"};","import React from \"react\"\r\nimport { Field, InjectedFormProps } from \"redux-form\"\r\nimport { loginDataType } from \"../../../dal/api\"\r\nimport { ErrorSpan } from \"../../component/error/error\"\r\nimport Input from \"../../component/fieldsTypes/input/Input\"\r\nimport { required } from \"../../component/validatior/valodator\"\r\n\r\nexport type IUserLoginForm = loginDataType\r\nexport type IPropsLoginForm = {\r\n    url: string | null\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<IUserLoginForm, IPropsLoginForm> & IPropsLoginForm> = ({error, handleSubmit, url}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <Field component={Input} name={\"email\"} validate={[required]} />\r\n        <Field component={Input} type={\"password\"} name={\"password\"} validate={[required]} />\r\n        <label>\r\n            <Field component={\"input\"} type={\"checkbox\"} name={\"rememberMe\"} />\r\n            Remember\r\n        </label>\r\n        { url && <>\r\n            <img src={url} alt=\"captcha\" />\r\n            <Field component={Input} name={\"captcha\"} validate={[required]} />\r\n        </> }\r\n        <button >Login</button>\r\n        { error && <ErrorSpan content={error} /> }\r\n    </form>\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { reduxForm } from 'redux-form'\r\nimport { AuthRedThunks } from '../../redux/authReducer'\r\nimport LoginForm, { IPropsLoginForm, IUserLoginForm } from './loginForm/loginForm'\r\nimport css from './login.module.css'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { AppStateType } from '../../redux/redux-state'\r\n\r\nconst ReduxLoginForm = reduxForm<IUserLoginForm, IPropsLoginForm>({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\ntype propsType = {\r\n    captchaUrl: string | null\r\n    isAuth: boolean\r\n\r\n    postLoginData: (data: IUserLoginForm) => any\r\n}\r\n\r\nconst Login: React.FC<propsType> = ({ postLoginData, captchaUrl, isAuth }) => {\r\n\r\n    const Submit = (data: IUserLoginForm) => {\r\n        postLoginData(data)\r\n    }\r\n\r\n    if (isAuth) return <Redirect to=\"/profile\" />\r\n\r\n    return <div className={css.main}>\r\n        <div className={css.loginBlock}>\r\n            <h3>Login</h3>\r\n            <ReduxLoginForm onSubmit={Submit} url={captchaUrl} />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n    captchaUrl: state.auth.captcha,\r\n    isAuth: state.auth.isAuth\r\n})\r\nconst mapDespatchToProps = {\r\n    postLoginData: AuthRedThunks.postLoginData\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDespatchToProps)(Login)"],"sourceRoot":""}