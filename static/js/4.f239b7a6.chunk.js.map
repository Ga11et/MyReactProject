{"version":3,"sources":["things/component/error/error.tsx","things/component/error/error.module.css","things/component/validatior/valodator.ts","hoc/withAuthRedirect.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","redux/selectors/selectors.ts","../node_modules/reselect/es/index.js","things/component/fieldsTypes/input/Input.tsx","things/component/fieldsTypes/input/Input.module.css","../node_modules/classnames/index.js","things/content/Description/description.module.css","things/content/content.module.css","things/content/Posts/posts.module.css","things/content/Posts/Post/post.module.css","things/content/Description/InfoForm/infoForm.module.css","things/content/Description/profileStatus/profileStatus.module.css","things/content/Posts/Post/miku.jpg","things/content/Posts/Post/post.tsx","things/content/Posts/posts.tsx","things/content/Posts/postsContainer.tsx","things/content/Description/InfoForm/infoForm.tsx","things/content/Description/profileInfo/profileInfo.tsx","things/content/Description/profileStatus/profileStatus.tsx","things/content/Description/description.tsx","assets/search.svg","assets/user.jpg","things/content/Description/descriptionContainer.tsx","things/content/content.tsx"],"names":["ErrorSpan","props","className","css","item","content","module","exports","required","value","undefined","maxLengthCreator","maxValue","length","withAuthRedirect","Component","connect","state","isAuth","auth","to","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","findPeople","someState","findpeople","FindPeoplrSelectors","isLoadingSelector","createSelector","data","isLoading","getPeopleSelector","people","countPagesSelector","countPeople","countPeopleOnPageSelector","countPeopleOnPage","activePageSelector","active","description","contentPage","DescriptionSelectors","profileInfoSelector","profile","statusSelector","status","isSuccessedSelector","successed","AuthSelectors","authIdSelector","userId","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","getDependencies","funcs","dependencies","every","dep","dependencyTypes","map","join","Error","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","concat","selector","params","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","Input","input","meta","haveError","touched","error","main","cn","hasOwn","hasOwnProperty","classNames","classes","arg","argType","inner","toString","prototype","key","call","default","Post","src","pic","alt","message","maxLength30","Textarea","PostsFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","validate","Posts","postComponents","posts","el","id","createNewPost","writePost","swap","mapDispatchToProps","ContentRedActions","setProfile","ProfileRedactingFormWithRedux","contacts","placeholder","type","htmlFor","keys","ProfilePageInfo","profileInfo","searchIcon","isMyProfile","Contact","setEditMode","lookingForAJob","searchWork","lookingForAJobDescription","filter","x","aboutMe","redact","onClick","ProfileStatus","useState","editMode","setStatus","toggleStatus","putStatus","newTextLink","createRef","ref","onChange","current","autoFocus","onBlur","onDoubleClick","ProfileRedactingForm","Description","profileFormSubmit","changeProfilePhoto","photos","large","altphoto","change","photo","target","files","noPic","fullName","initialValues","info","then","getUserInfo","ContentRedThunks","compose","withRouter","authId","isSuccessed","match","idPath","setIdPath","setIsSuccessed","useEffect","useMemo","Content"],"mappings":"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","file":"static/js/4.f239b7a6.chunk.js","sourcesContent":["import React from 'react'\r\nimport css from './error.module.css'\r\n\r\ntype propsType = {\r\n    content: string\r\n}\r\n\r\nexport const ErrorSpan: React.FC<propsType> = (props) => {\r\n    return <span className={css.item} {...props}>{props.content}</span>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"error_item__2NDaC\"};","\r\n\r\nexport const required = (value: string): string | undefined => {\r\n    if (value === undefined) return \"Required field\"\r\n    return undefined\r\n}\r\n\r\nexport const maxLengthCreator = (maxValue: number): ((value:string) => string | undefined) => (value: string) => {\r\n    if (value && value.length > maxValue) return `Maximum: ${maxValue} simbols`\r\n    return undefined\r\n}\r\n\r\nexport const submitValidator = (values: any) => {\r\n    console.log(values)\r\n}","import { AppStateType } from '../redux/redux-state';\r\nimport React, {FC } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Redirect } from \"react-router-dom\"\r\nimport { RedirectProps } from \"react-router\"\r\n\r\ntype propsType = {\r\n    isAuth: boolean\r\n}\r\n\r\nexport function withAuthRedirect<WP extends RedirectProps>(Component: FC<WP>) {\r\n\r\n    const RedirectComponent: FC<RedirectProps & propsType> = ({isAuth, ...props}) => {\r\n        \r\n        if (!isAuth) return <Redirect to=\"/login\" />\r\n        else return <Component {...props as WP} />\r\n    \r\n    }\r\n\r\n    const mapStateToProps = (state: AppStateType) => ({\r\n        isAuth: state.auth.isAuth\r\n    })\r\n\r\n    return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { createSelector } from \"reselect\"\r\nimport { AppStateType } from \"../redux-state\"\r\n\r\n// FindPeoplePage\r\nconst findPeople = (someState: AppStateType) => someState.findpeople\r\nexport const FindPeoplrSelectors = {\r\n    isLoadingSelector: createSelector( findPeople, data => data.isLoading),\r\n    getPeopleSelector: createSelector( findPeople, data => data.people),\r\n    countPagesSelector: createSelector( findPeople, data => data.countPeople),\r\n    countPeopleOnPageSelector: createSelector( findPeople, data => data.countPeopleOnPage),\r\n    activePageSelector: createSelector( findPeople, data => data.active)\r\n}\r\n\r\n// Description\r\nconst description = (someState: AppStateType) => someState.contentPage\r\nexport const DescriptionSelectors = {\r\n    profileInfoSelector: createSelector( description, data => data.profile),\r\n    statusSelector: createSelector( description, data => data.status),\r\n    isSuccessedSelector: createSelector( description, data => data.successed)\r\n}\r\n\r\n// Auth\r\nconst auth = (someState: AppStateType) => someState.auth\r\nexport const AuthSelectors = {\r\n    authIdSelector: createSelector( auth, data => data.userId)\r\n}\r\n\r\n","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { ErrorSpan } from \"../../error/error\"\r\nimport css from './Input.module.css'\r\nimport cn from 'classnames'\r\nimport React from \"react\"\r\n\r\ntype metaType = {\r\n    touched: boolean\r\n    error: string\r\n}\r\ntype propsType = {\r\n    input: number\r\n    meta: metaType\r\n}\r\n\r\nconst Input: React.FC<propsType> = ({ input, meta, ...props }) => {\r\n    const haveError = meta.touched && meta.error\r\n    return <div className={css.main} >\r\n        <input {...input} {...props} className={ cn({ [css.error]: haveError })} />\r\n        {haveError ? <ErrorSpan content={meta.error} /> : null}\r\n    </div>\r\n}\r\n\r\nexport default Input","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Input_main__3cdLk\",\"error\":\"Input_error__2s9Uc\"};","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"description_item__3PL5U\",\"profile\":\"description_profile__2ET0W\",\"change\":\"description_change__9lSCx\",\"noPic\":\"description_noPic__21Vrp\",\"description\":\"description_description__1_gO7\",\"redact\":\"description_redact__22dQr\",\"searchWork\":\"description_searchWork__2kdwL\",\"contacts\":\"description_contacts__-OZnv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"content_main__2xxUk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"posts_item__2TLVC\",\"error\":\"posts_error__C-IQO\",\"swap\":\"posts_swap__3Htqk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"post_item__aF53b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"infoForm_main__EL0W0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"profileStatus_main__zVw6H\"};","export default __webpack_public_path__ + \"static/media/miku.43c6175c.jpg\";","import css from './post.module.css'\r\nimport pic from './miku.jpg'\r\nimport React from 'react'\r\n\r\ntype propsType = {\r\n    message: string\r\n}\r\n\r\nlet Post: React.FC<propsType> = (props) => {\r\n    return (\r\n        <div className={css.item}>\r\n            <img src={pic} alt=\"\" />\r\n            <p>{props.message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import css from './posts.module.css'\r\nimport Post from './Post/post'\r\nimport React from 'react'\r\nimport { Field, InjectedFormProps, reduxForm, WrappedFieldProps } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../component/validatior/valodator'\r\nimport { ErrorSpan } from '../../component/error/error'\r\nimport { PostType } from '../../../types/types'\r\n\r\ntype propsType = {\r\n    posts: Array<PostType>\r\n\r\n    createNewPost: (text: string) => void\r\n}\r\n\r\nconst Posts: React.FC<propsType> = (props) => {\r\n    let postComponents = props.posts\r\n        .map(el => <Post key={el.id} message={el.message} />)\r\n\r\n    const submit = (data: any) => {\r\n        props.createNewPost(data.writePost)\r\n    }\r\n\r\n    return (\r\n        <div className={css.item}>\r\n            <PostsFormRedux onSubmit={submit}/>\r\n            <div className={css.swap}>\r\n                {postComponents}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Redux-form\r\n\r\nconst maxLength30 = maxLengthCreator(30)\r\ntype IUser = {\r\n\r\n}\r\ntype IProps = {\r\n\r\n}\r\n\r\nconst PostsForm: React.FC<InjectedFormProps<IUser, IProps> & IProps> = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name=\"writePost\" component={Textarea} validate={[required, maxLength30]}/><br />\r\n            <button>Send</button>\r\n        </form>\r\n            )\r\n}\r\n\r\n\r\n\r\nconst Textarea: React.FC<WrappedFieldProps> = ({input, meta, ...props}) => {\r\n    const haveError = meta.error && meta.touched\r\n    return (\r\n        <div className={haveError ? css.error : \"\"} >\r\n            <textarea {...input} {...props}  />\r\n            {haveError && <ErrorSpan content={meta.error} />}   \r\n        </div>\r\n    )\r\n}\r\n\r\nconst PostsFormRedux = reduxForm<IUser, IProps>({\r\n    form: \"posts\"\r\n})(PostsForm)\r\n\r\nexport default Posts\r\n\r\n","import { connect } from 'react-redux'\r\nimport Posts from './posts'\r\nimport React from 'react'\r\nimport { AppStateType } from '../../../redux/redux-state'\r\nimport { PostType, profileType } from '../../../types/types'\r\nimport { ContentRedActions } from '../../../redux/contentReducer'\r\n\r\ntype propsType = {\r\n    posts: Array<PostType>\r\n    \r\n    createNewPost: (text: string) => void\r\n    setProfile: (profile: profileType) => void\r\n}\r\n\r\nconst PostsContainer: React.FC<propsType> = (props) => {\r\n\r\n    return (\r\n        <Posts {...props} />\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        posts: state.contentPage.posts,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    createNewPost: ContentRedActions.createNewPost,\r\n    setProfile: ContentRedActions.setProfile\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsContainer)\r\n","import css from './infoForm.module.css'\r\nimport React from 'react'\r\nimport { Field, InjectedFormProps } from 'redux-form'\r\nimport Input from '../../../component/fieldsTypes/input/Input'\r\nimport { ErrorSpan } from '../../../component/error/error'\r\nimport { IProps, IUser } from '../description'\r\n\r\n\r\nconst ProfileRedactingFormWithRedux: React.FC<InjectedFormProps<IUser, IProps> & IProps> = ({contacts, handleSubmit, error}) => {\r\n\r\n    return <form className={css.main} onSubmit={handleSubmit}>\r\n        <Field component={Input} name=\"fullName\" placeholder=\"Write your name\" />\r\n        <Field component={\"input\"} type=\"checkbox\" name=\"lookingForAJob\" id=\"areYouWork\" />\r\n        <label htmlFor=\"areYouWork\" >Are you work?</label>\r\n        <Field component={Input} name={\"lookingForAJobDescription\"} placeholder=\"Where you work\" />\r\n        <Field component={Input} name={\"aboutMe\"} placeholder=\"Tell about you\" />\r\n\r\n        <h4>Contacts:</h4>\r\n        {Object.keys(contacts).map( el => {\r\n            return <Field key={el} component={Input} name={`contacts.${el}`} placeholder={el} />\r\n        })}\r\n\r\n        { error && <ErrorSpan content={error} /> }\r\n        <button>Save</button>\r\n    </form>\r\n}\r\n\r\n\r\n\r\nexport default ProfileRedactingFormWithRedux\r\n","import React from 'react'\r\nimport { profileType } from '../../../../types/types'\r\nimport css from '../description.module.css'\r\n\r\ntype propsType = {\r\n    profileInfo: profileType\r\n    searchIcon: string\r\n    isMyProfile: boolean\r\n    Contact: any\r\n\r\n    setEditMode: (some: boolean) => void\r\n}\r\n\r\nconst ProfilePageInfo: React.FC<propsType> = ({profileInfo, searchIcon, isMyProfile, Contact, setEditMode}) => {\r\n    const isValidcontactsType = (x: string): x is keyof typeof profileInfo.contacts => x in profileInfo.contacts\r\n    return <>\r\n    {profileInfo.lookingForAJob\r\n        ? <div className={css.searchWork}>\r\n            <img src={searchIcon} alt=\"searchIcon\" />\r\n            <label>{profileInfo.lookingForAJobDescription}</label>\r\n        </div>\r\n        : null}\r\n    <div className={css.contacts}>\r\n        {Object.keys(profileInfo.contacts)\r\n            .filter(isValidcontactsType)\r\n            .map(el => {\r\n            return <Contact key={el} name={el} data={profileInfo.contacts[el]} />\r\n        })}\r\n    </div>\r\n    <p className={css.description} > {profileInfo.aboutMe}</p>\r\n    {isMyProfile && <button className={css.redact} onClick={() => { setEditMode(true) }}>Redact</button>}\r\n</>\r\n}\r\n\r\nexport default ProfilePageInfo","import css from './profileStatus.module.css'\r\nimport React, { useState, createRef } from 'react'\r\n\r\ntype propsType = {\r\n    isMyProfile: boolean\r\n    status: string\r\n\r\n    putStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileStatus: React.FC<propsType> = ({isMyProfile, ...props}) => {\r\n    \r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    const toggleStatus = () => {\r\n        if (editMode) {\r\n            setEditMode(false)\r\n            props.putStatus(status)\r\n        } else if (isMyProfile) setEditMode(true)\r\n    }\r\n\r\n    const newTextLink = createRef<HTMLInputElement>();\r\n    \r\n    const writing = () => {\r\n        if (newTextLink.current) setStatus(newTextLink.current.value)\r\n    }\r\n\r\n    return <div className={css.main}>\r\n        {editMode \r\n            ? <input ref={newTextLink} \r\n                    onChange={ () => {writing()}} \r\n                    autoFocus={true} \r\n                    onBlur={ () => {toggleStatus()} } \r\n                    value={status} />\r\n            : <p onDoubleClick={ () => {toggleStatus()} } >\r\n                {status}\r\n            </p> }\r\n    </div>\r\n}\r\n\r\nexport default ProfileStatus","import React, { useState } from 'react'\r\nimport { reduxForm } from 'redux-form'\r\nimport { contactsType, profileType } from '../../../types/types'\r\nimport css from './description.module.css'\r\nimport ProfileRedactingForm from './InfoForm/infoForm'\r\nimport ProfilePageInfo from './profileInfo/profileInfo'\r\nimport ProfileStatus from './profileStatus/profileStatus'\r\n\r\nexport type IUser = profileType\r\n\r\nexport type IProps = {\r\n    contacts: contactsType\r\n    initialValues: profileType\r\n\r\n    setEditMode: (some: boolean) => void\r\n    onSubmit: (info: profileType) => void\r\n}\r\n\r\nconst ProfileRedactingFormWithRedux = reduxForm<IUser, IProps>({ form: 'profileForm' })(ProfileRedactingForm)\r\n\r\ntype propsType = {\r\n    searchIcon: string\r\n    isMyProfile: boolean\r\n    profileInfo: profileType\r\n    altphoto: string\r\n    status: string\r\n\r\n    profileFormSubmit: (info: profileType) => Promise<void>\r\n    changeProfilePhoto: (file: any) => void\r\n    putStatus: (status: string) => void\r\n}\r\n\r\nconst Description: React.FC<propsType> = ({ searchIcon, isMyProfile, profileFormSubmit, changeProfilePhoto, profileInfo, ...props }) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    const changePhoto = (photo: any) => {\r\n        changeProfilePhoto(photo.target.files[0])\r\n    }\r\n\r\n    const formSubmit = (info: profileType) => {\r\n        profileFormSubmit(info)\r\n            .then(() => {\r\n                setEditMode(false)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className={css.item}>\r\n            <section className={css.profile} >\r\n                <div>\r\n                    <img src={profileInfo.photos.large\r\n                        ? profileInfo.photos.large\r\n                        : props.altphoto} alt=\"avatar\" />\r\n                    <div className={css.change} >\r\n                        <input type=\"file\" id=\"file\" onChange={changePhoto} />\r\n                        {isMyProfile && <label htmlFor=\"file\" >Change</label>}\r\n                    </div>\r\n                </div>\r\n                <div className={css.noPic}>\r\n                    <h3>{profileInfo.fullName}</h3>\r\n                    \r\n                    <ProfileStatus\r\n                        status={props.status}\r\n                        putStatus={props.putStatus}\r\n                        isMyProfile={isMyProfile} />\r\n\r\n                    {editMode\r\n                        ? <ProfileRedactingFormWithRedux\r\n                            contacts={profileInfo.contacts}\r\n                            initialValues={profileInfo}\r\n                            setEditMode={setEditMode}\r\n                            onSubmit={formSubmit} />\r\n                        : <ProfilePageInfo \r\n                            setEditMode={setEditMode} \r\n                            Contact={Contact} \r\n                            profileInfo={profileInfo}\r\n                            searchIcon={searchIcon}\r\n                            isMyProfile={isMyProfile} />\r\n                    }\r\n                </div>\r\n            </section>\r\n        </div >\r\n    )\r\n}\r\n\r\ntype contactPropsType = {\r\n    name: string\r\n    data: string\r\n}\r\n\r\nconst Contact: React.FC<contactPropsType> = ({ name, data }) => {\r\n    if (!!data) return <p>{name}: <span>{data}</span></p>\r\n    else return null\r\n}\r\n\r\nexport default Description\r\n","export default __webpack_public_path__ + \"static/media/search.6174e09b.svg\";","export default __webpack_public_path__ + \"static/media/user.5edf0c2b.jpg\";","import { connect } from 'react-redux'\r\nimport Description from './description'\r\nimport searchIcon from '../../../assets/search.svg'\r\nimport { ContentRedActions, ContentRedThunks } from '../../../redux/contentReducer'\r\nimport { Redirect, withRouter } from 'react-router-dom'\r\nimport altphoto from '../../../assets/user.jpg'\r\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect'\r\nimport { Preloader } from '../../component/preloader/preloader'\r\nimport React, { useEffect, useState, useMemo, FC } from 'react'\r\nimport { profileType } from '../../../types/types'\r\nimport { AppStateType } from '../../../redux/redux-state'\r\nimport { AuthSelectors, DescriptionSelectors } from '../../../redux/selectors/selectors'\r\nimport { compose } from 'redux'\r\n\r\ntype propsType = {\r\n    authId: number\r\n    match: any\r\n    isSuccessed: boolean\r\n    searchIcon: string\r\n    profileInfo: profileType\r\n    altphoto: string\r\n    status: string\r\n\r\n    putStatus: (status: string) => void\r\n    changeProfilePhoto: (file: any) => void\r\n    profileFormSubmit: (info: profileType) => Promise<void>\r\n    getUserInfo: (id: number) => profileType\r\n    setProfile: (profile: profileType) => void\r\n}\r\n\r\nconst DescriptionContainer: React.FC<propsType> = ({authId, getUserInfo, ...props}) => {\r\n\r\n    const [idPath, setIdPath] = useState(props.match.params.userId) \r\n    const [isSuccessed, setIsSuccessed] = useState(props.isSuccessed)\r\n\r\n    const isMyProfile = (+idPath === +authId)\r\n\r\n    useEffect( () => {\r\n        setIdPath(props.match.params.userId)\r\n    }, [props.match.params.userId] )\r\n\r\n    useEffect( () => {\r\n        setIsSuccessed(props.isSuccessed)\r\n    }, [props.isSuccessed] )\r\n\r\n    useMemo( () => {\r\n        if (idPath) getUserInfo(idPath)\r\n    }, [idPath, getUserInfo])\r\n\r\n    if (!idPath) return <Redirect to={`profile/${authId}`} />\r\n    else if (!isSuccessed) return <Preloader /> \r\n    else return <Description isMyProfile={isMyProfile} {...props} />\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n    searchIcon,\r\n    altphoto,\r\n    profileInfo: DescriptionSelectors.profileInfoSelector(state),\r\n    status: DescriptionSelectors.statusSelector(state),\r\n    authId: AuthSelectors.authIdSelector(state),\r\n    isSuccessed: DescriptionSelectors.isSuccessedSelector(state)\r\n})\r\nconst mapDispatchToProps = {\r\n    getUserInfo: ContentRedThunks.getUserInfo,\r\n    putStatus: ContentRedThunks.putStatus,\r\n    setProfile: ContentRedActions.setProfile,\r\n    changeProfilePhoto: ContentRedThunks.changeProfilePhoto,\r\n    profileFormSubmit: ContentRedThunks.profileFormSubmit\r\n}\r\n\r\nexport default compose<FC<{}>>(\r\n    withRouter,\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(DescriptionContainer)","import css from './content.module.css'\r\nimport PostsContainer from './Posts/postsContainer'\r\nimport DescriptionContainer from './Description/descriptionContainer'\r\nimport React from 'react'\r\n\r\ntype propsType = {\r\n}\r\n\r\nconst Content: React.FC<propsType> = (props) => {\r\n    return (\r\n        <div className={css.main}>\r\n            <DescriptionContainer />\r\n            <PostsContainer />\r\n        </div>\r\n)}\r\n\r\nexport default Content"],"sourceRoot":""}